{"version":3,"sources":["logo.svg","components/RecipeNavbar.js","pages/HomePage.js","pages/LoginPage.js","components/RecipeCard.js","components/NewRecipeModal.js","pages/RecipesPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RecipeNavbar","props","state","redirectToHome","logout","bind","this","handleLogout","setState","activeUser","to","recipesLink","Nav","Link","href","signupLink","loginLink","logoutLink","onClick","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","className","Component","HomePage","Jumbotron","Button","variant","LoginPage","email","pwd","showInvalidLoginError","redirectToRecipesPage","handleInputChange","login","event","target","value","type","checked","name","allUsers","handleLogin","newActiveUser","find","user","toLowerCase","errorAlert","Alert","Form","Group","controlId","Label","Control","placeholder","onChange","block","RecipeCard","recipe","Card","Img","src","img","Body","Title","Text","desc","NewRecipeModal","createRecipe","newRecipe","handleNewRecipe","handleClose","show","Modal","onHide","Header","closeButton","Footer","RecipesPage","showNewRecipeModal","recipes","recipesView","map","Col","lg","md","key","Container","fname","Row","App","jsonUsers","allRecipes","jsonRecipes","length","userId","concat","activeUserRecipes","filter","exact","path","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49d08084.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { Navbar, Nav } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom';\n\nclass RecipeNavbar extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            redirectToHome: false\n        }\n\n        this.logout = this.logout.bind(this);\n    }\n\n    logout() {\n        // This eventually calls the handleLogout method of the App component\n        this.props.handleLogout();\n\n        this.setState({\n            redirectToHome: true\n        })\n    }\n\n    componentDidUpdate() {\n        if (this.state.redirectToHome) {\n            this.setState({\n                redirectToHome: false\n            })\n        }\n    }\n\n    render() {\n        const { redirectToHome } = this.state;\n        const { activeUser } = this.props;\n\n        if (redirectToHome) {\n            return <Redirect to=\"/\"/>\n        }\n\n        const recipesLink = activeUser ? <Nav.Link href=\"#/recipes\">Recipes</Nav.Link> : null;\n        const signupLink = !activeUser ? <Nav.Link href=\"#/signup\">Signup</Nav.Link> : null;\n        const loginLink = !activeUser ? <Nav.Link href=\"#/login\">Login</Nav.Link> : null;\n        const logoutLink = activeUser ? <Nav.Link onClick={this.logout}>Logout</Nav.Link> : null;\n\n\n        return (\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#/\">Recipe Book</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        {recipesLink}\n                    </Nav>\n                    <Nav className=\"ml-auto\">\n                        {signupLink}\n                        {loginLink}\n                        {logoutLink}\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default RecipeNavbar;","import React, { Component } from 'react';\nimport RecipeNavbar from '../components/RecipeNavbar';\nimport { Jumbotron, Button } from 'react-bootstrap';\n\nclass HomePage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    render() {\n        const { activeUser, handleLogout } = this.props;\n\n        return (\n            <div>\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout} />\n                <Jumbotron>\n                    <h1>Recipe Book</h1>\n                    <p>\n                        Master your recipes\n                    </p>\n                    <p>\n                        <Button variant=\"success\" href=\"#/login\">Login</Button>\n                    </p>\n                </Jumbotron>            \n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, { Component } from 'react';\nimport './LoginPage.css'\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass LoginPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"nir@nir.com\",\n            pwd: \"123\",\n            showInvalidLoginError: false,\n            redirectToRecipesPage: false\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.login = this.login.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    login() {\n        const { allUsers, handleLogin } = this.props;\n        const { email, pwd } = this.state;\n\n        const newActiveUser = allUsers.find(user => user.email.toLowerCase() === email.toLowerCase() && user.pwd === pwd);\n\n        if (newActiveUser) {\n            // 1) Updating App component on the new active user\n            handleLogin(newActiveUser);\n\n            // 2) navigate to recipes page\n            this.setState({\n                redirectToRecipesPage: true\n            });\n        } else {\n            this.setState({\n                showInvalidLoginError: true\n            });\n        }\n\n    }\n\n    render() {\n        const { email, pwd, showInvalidLoginError, redirectToRecipesPage } = this.state;\n\n        if (redirectToRecipesPage) {\n            return <Redirect to=\"/recipes\"/>\n        }\n\n        const errorAlert = showInvalidLoginError ? <Alert variant=\"danger\">Invalid email or password!</Alert> : null;\n\n        return (\n            <div className=\"p-login\">\n                <div className=\"main\">\n                    <h1>Login to Recipe Book</h1>\n                    <p>or <Link to=\"/signup\">create a new account</Link></p>\n                    {errorAlert}\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email address</Form.Label>\n                            <Form.Control name=\"email\" value={email}\n                                type=\"email\" placeholder=\"Enter email\" onChange={this.handleInputChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control name=\"pwd\" value={pwd}\n                                type=\"password\" placeholder=\"Password\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                        <Button variant=\"success\" type=\"button\" block onClick={this.login}>\n                            Login\n                        </Button>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\nimport './RecipeCard.css'\nimport { Card } from 'react-bootstrap';\n\nclass RecipeCard extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n        const { recipe } = this.props;\n\n        return (\n            <div className=\"recipe\">\n                <Card>\n                    <Card.Img variant=\"top\" src={recipe.img} />\n                    <Card.Body>\n                        <Card.Title>{recipe.name}</Card.Title>\n                        <Card.Text>\n                            {recipe.desc}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default RecipeCard;","import React, { Component } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\n\nclass NewRecipeModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            desc: \"\",\n            img: \"\"\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.createRecipe = this.createRecipe.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    createRecipe() {\n        const { name, desc, img } = this.state;\n        const newRecipe = { name, desc, img};\n        this.props.handleNewRecipe(newRecipe);\n        this.props.handleClose();\n    }\n\n    render() {\n        const { show, handleClose } = this.props;\n        const { name, desc, img } = this.state;\n\n        return (\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>New Recipe</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control name=\"name\" value={name}\n                                type=\"text\" placeholder=\"Enter Recipe Name\" onChange={this.handleInputChange} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control name=\"desc\" value={desc}\n                                type=\"text\" placeholder=\"Enter Recipe Description\" onChange={this.handleInputChange} />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Image URL</Form.Label>\n                            <Form.Control name=\"img\" value={img}\n                                type=\"text\" placeholder=\"Enter Recipe Image URL\" onChange={this.handleInputChange} />\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                </Button>\n                    <Button variant=\"success\" onClick={this.createRecipe}>\n                        Create\n                </Button>\n                </Modal.Footer>\n            </Modal>);\n    }\n}\n\nexport default NewRecipeModal;","import React, { Component } from 'react';\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap'\nimport RecipeNavbar from '../components/RecipeNavbar';\nimport { Redirect } from 'react-router-dom';\nimport RecipeCard from '../components/RecipeCard';\nimport './RecipesPage.css'\nimport NewRecipeModal from '../components/NewRecipeModal';\n\nclass RecipesPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            showNewRecipeModal: false\n        }\n\n        this.handleClose = this.handleClose.bind(this);\n        this.handleNewRecipe = this.handleNewRecipe.bind(this);\n    }\n\n    handleClose() {\n        this.setState({\n            showNewRecipeModal: false\n        })\n    }\n\n    handleNewRecipe(newRecipe) {\n        this.props.handleNewRecipe(newRecipe);\n    }\n\n    render() {\n        const { showNewRecipeModal } = this.state;\n        const { activeUser, handleLogout, recipes } = this.props;\n\n        if (!activeUser) {\n            return <Redirect to=\"/\" />\n        }\n\n        const recipesView = recipes.map(recipe =>\n            <Col lg={3} md={6} key={recipe.id}>\n                <RecipeCard recipe={recipe} />\n            </Col>)\n\n        return (\n            <div>\n                <RecipeNavbar activeUser={activeUser} handleLogout={handleLogout} />\n                <Container>\n                    <div className=\"recipes-header\">\n                        <h1>{activeUser.fname}'s Recipes</h1>\n                        <Button onClick={() => {this.setState({showNewRecipeModal: true})}}>New Recipe</Button>\n                    </div>\n                    <Row>\n                        {recipesView}\n                    </Row>\n\n                </Container>\n\n                <NewRecipeModal show={showNewRecipeModal} handleClose={this.handleClose} handleNewRecipe={this.handleNewRecipe}/>\n\n            </div>\n        );\n    }\n}\n\nexport default RecipesPage","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\nimport HomePage from './pages/HomePage';\nimport LoginPage from './pages/LoginPage';\nimport RecipesPage from './pages/RecipesPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport jsonUsers from \"./data/users\";\nimport jsonRecipes from \"./data/recipes\"\nimport RecipeNavbar from './components/RecipeNavbar';\n\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      activeUser: null,\n      allUsers: jsonUsers,\n      allRecipes: jsonRecipes\n      // allRecipes: jsonRecipes.map(recipe => new RecipeModel(recipe));\n      // {\n      //   \"id\": \"2121212\",\n      //   \"name\": \"Nir\"\n      // }\n\n      //null\n    }\n\n    this.handleLogout = this.handleLogout.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleNewRecipe = this.handleNewRecipe.bind(this);\n  }\n  \n  handleLogin(user) {\n    this.setState({\n      activeUser: user\n    });\n  }\n\n  handleLogout() {\n    this.setState({\n      activeUser: null\n    })\n  }\n\n  handleNewRecipe(newRecipe) {\n    const { allRecipes, activeUser } = this.state;\n\n    // adding one to the id of the last recipe in the array\n    newRecipe.id = allRecipes[allRecipes.length - 1].id + 1;\n    newRecipe.userId = activeUser.id;\n\n    this.setState({\n      allRecipes: allRecipes.concat(newRecipe)\n    })\n  }\n\n\n  render() {\n    const { activeUser, allUsers, allRecipes } = this.state;\n\n    const activeUserRecipes = activeUser ? \n      allRecipes.filter(recipe => recipe.userId === activeUser.id) : null\n\n    return ( \n\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage activeUser={activeUser} handleLogout={this.handleLogout}/>\n        </Route>\n        <Route exact path=\"/login\">\n          <LoginPage allUsers={allUsers} handleLogin={this.handleLogin}/>\n        </Route>\n        <Route exact path=\"/recipes\">\n          <RecipesPage activeUser={activeUser} recipes={activeUserRecipes} handleLogout={this.handleLogout} \n            handleNewRecipe={this.handleNewRecipe}/>\n        </Route>\n\n      </Switch>\n    );\n  \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}